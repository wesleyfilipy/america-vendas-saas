-- Verifica√ß√£o final - Confirmar que tudo est√° funcionando
-- Execute este script no SQL Editor do Supabase

-- =====================================================
-- 1. VERIFICAR SE O USU√ÅRIO FOI SINCRONIZADO
-- =====================================================

SELECT 'VERIFICA√á√ÉO DO USU√ÅRIO:' as info;
SELECT 
    CASE 
        WHEN EXISTS (SELECT 1 FROM public.users WHERE id = auth.uid()) 
        THEN '‚úÖ Usu√°rio existe na tabela users'
        ELSE '‚ùå Usu√°rio N√ÉO existe na tabela users'
    END as user_status;

-- =====================================================
-- 2. MOSTRAR DADOS DO USU√ÅRIO
-- =====================================================

SELECT 'DADOS DO USU√ÅRIO:' as info;
SELECT 
    id,
    email,
    name,
    phone,
    created_at
FROM public.users 
WHERE id = auth.uid();

-- =====================================================
-- 3. VERIFICAR SE O AN√öNCIO DE TESTE FOI CRIADO
-- =====================================================

SELECT 'AN√öNCIOS EXISTENTES:' as info;
SELECT 
    id,
    title,
    status,
    user_id,
    created_at
FROM public.listings 
ORDER BY created_at DESC 
LIMIT 5;

-- =====================================================
-- 4. VERIFICAR ESTRUTURA FINAL
-- =====================================================

SELECT 'ESTRUTURA FINAL DA TABELA LISTINGS:' as info;
SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns 
WHERE table_name = 'listings' 
ORDER BY ordinal_position;

-- =====================================================
-- 5. VERIFICAR POL√çTICAS DE SEGURAN√áA
-- =====================================================

SELECT 'POL√çTICAS DE SEGURAN√áA:' as info;
SELECT 
    tablename,
    policyname,
    cmd,
    qual
FROM pg_policies 
WHERE tablename IN ('listings', 'users')
ORDER BY tablename, policyname;

-- =====================================================
-- 6. TESTE FINAL DE INSER√á√ÉO
-- =====================================================

-- Teste final (descomente se quiser testar)
/*
SELECT 'TESTE FINAL DE INSER√á√ÉO:' as info;
INSERT INTO public.listings (
    title,
    description,
    price,
    user_id,
    expires_at,
    category,
    status,
    is_paid
) VALUES (
    'Teste Final - Aplica√ß√£o Pronta',
    'Este an√∫ncio confirma que a aplica√ß√£o est√° funcionando corretamente',
    150.00,
    auth.uid(),
    NOW() + INTERVAL '1 day',
    'outro',
    'draft',
    false
) RETURNING id, title, status, user_id;
*/

-- =====================================================
-- 7. RESUMO FINAL
-- =====================================================

SELECT 'üéâ RESUMO FINAL:' as info;
SELECT 
    'Campo status adicionado' as item,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.columns WHERE table_name = 'listings' AND column_name = 'status')
        THEN '‚úÖ OK'
        ELSE '‚ùå FALHOU'
    END as status
UNION ALL
SELECT 
    'Usu√°rio sincronizado' as item,
    CASE 
        WHEN EXISTS (SELECT 1 FROM public.users WHERE id = auth.uid())
        THEN '‚úÖ OK'
        ELSE '‚ùå FALHOU'
    END as status
UNION ALL
SELECT 
    'Pol√≠ticas de seguran√ßa' as item,
    CASE 
        WHEN EXISTS (SELECT 1 FROM pg_policies WHERE tablename = 'listings')
        THEN '‚úÖ OK'
        ELSE '‚ùå FALHOU'
    END as status
UNION ALL
SELECT 
    'Teste de inser√ß√£o' as item,
    CASE 
        WHEN EXISTS (SELECT 1 FROM public.listings WHERE user_id = auth.uid())
        THEN '‚úÖ OK'
        ELSE '‚ö†Ô∏è N√£o testado'
    END as status;

-- =====================================================
-- 8. MENSAGEM DE SUCESSO
-- =====================================================

SELECT 'üöÄ APLICA√á√ÉO PRONTA!' as status;
SELECT 'Agora voc√™ pode criar an√∫ncios sem erro 409!' as message; 